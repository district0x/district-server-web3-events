{
  "contractName": "MutableForwarder",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback",
      "payable": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "setTarget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"For OfferingRegistry contract we use mutable forwarder instead of using the contract directly. This is for better upgradeability. Since OfferingRegistry fires all events related to offerings, we want to be able to access whole history of events always on the same address. Which would be the address of a MutableForwarder. When OfferingRegistry contract is replaced with an updated one, mutable forwarder just replaces target and all events stay still accessible on the same address.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setTarget(address)\":{\"details\":\"Replaces target forwarder contract is pointing to Only owner can replace target\",\"params\":{\"_target\":\"New target to proxy into\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Forwarder proxy contract with editable target\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/resources/public/contracts/src/proxy/MutableForwarder.sol\":\"MutableForwarder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"project:/resources/public/contracts/src/proxy/DelegateProxy.sol\":{\"keccak256\":\"0x48160f971834b399c86a4440bd3ecc33f17b210378123915abc73e14ec32c3b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9289072c5fef8cc34b0a8a727652df78366b7375d2aec7210c9c96dc4c0bb65\",\"dweb:/ipfs/Qmf3rZhKQhZ7tKdX3giueXskZvGV38RTESXukWu6JviaJ1\"]},\"project:/resources/public/contracts/src/proxy/MutableForwarder.sol\":{\"keccak256\":\"0xadf60167b5545d8b4eff0ffea448cd94c5cbc21a6364eb75560599e799b284b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407f82d17deea74f1db688d886dc4c44d4ad04ca90fb7de231fbb5248f603805\",\"dweb:/ipfs/QmabAjTwpycHZiDqLKow5t9EstGMNQsS1AiMEjUtXK36QQ\"]}},\"version\":1}",
  "bytecode": "0x60806040527363270D4D86CCF8Bc9b4A6a399Fbe6F695172F462600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006557600080fd5b50600061007661011960201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350610121565b600033905090565b6107af806101306000396000f3fe60806040526004361061004e5760003560e01c8063715018a6146100c2578063776d1a01146100d95780638da5cb5b14610102578063d4b839921461012d578063f2fde38b146101585761004f565b5b6100c0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610181565b005b3480156100ce57600080fd5b506100d76101bf565b005b3480156100e557600080fd5b5061010060048036038101906100fb91906105ce565b6102f9565b005b34801561010e57600080fd5b506101176103b9565b604051610124919061064c565b60405180910390f35b34801561013957600080fd5b506101426103e2565b60405161014f919061064c565b60405180910390f35b34801561016457600080fd5b5061017f600480360381019061017a91906105ce565b610408565b005b813b6000811461019057610195565b600080fd5b50611000806000835160208501866127105a03f480600081146101b7576101b9565bfe5b50816000f35b6101c76105b1565b73ffffffffffffffffffffffffffffffffffffffff166101e56103b9565b73ffffffffffffffffffffffffffffffffffffffff161461023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023290610687565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6103016105b1565b73ffffffffffffffffffffffffffffffffffffffff1661031f6103b9565b73ffffffffffffffffffffffffffffffffffffffff1614610375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036c90610687565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104106105b1565b73ffffffffffffffffffffffffffffffffffffffff1661042e6103b9565b73ffffffffffffffffffffffffffffffffffffffff1614610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047b90610687565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104eb90610667565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000813590506105c881610762565b92915050565b6000602082840312156105e057600080fd5b60006105ee848285016105b9565b91505092915050565b610600816106b8565b82525050565b60006106136026836106a7565b915061061e826106ea565b604082019050919050565b60006106366020836106a7565b915061064182610739565b602082019050919050565b600060208201905061066160008301846105f7565b92915050565b6000602082019050818103600083015261068081610606565b9050919050565b600060208201905081810360008301526106a081610629565b9050919050565b600082825260208201905092915050565b60006106c3826106ca565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61076b816106b8565b811461077657600080fd5b5056fea264697066735822122061d10e0dcb405f9bc890e18d7f06f45e71acb922c6e8179a98e5048db1a72c7864736f6c63430008040033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c8063715018a6146100c2578063776d1a01146100d95780638da5cb5b14610102578063d4b839921461012d578063f2fde38b146101585761004f565b5b6100c0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610181565b005b3480156100ce57600080fd5b506100d76101bf565b005b3480156100e557600080fd5b5061010060048036038101906100fb91906105ce565b6102f9565b005b34801561010e57600080fd5b506101176103b9565b604051610124919061064c565b60405180910390f35b34801561013957600080fd5b506101426103e2565b60405161014f919061064c565b60405180910390f35b34801561016457600080fd5b5061017f600480360381019061017a91906105ce565b610408565b005b813b6000811461019057610195565b600080fd5b50611000806000835160208501866127105a03f480600081146101b7576101b9565bfe5b50816000f35b6101c76105b1565b73ffffffffffffffffffffffffffffffffffffffff166101e56103b9565b73ffffffffffffffffffffffffffffffffffffffff161461023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023290610687565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6103016105b1565b73ffffffffffffffffffffffffffffffffffffffff1661031f6103b9565b73ffffffffffffffffffffffffffffffffffffffff1614610375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036c90610687565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104106105b1565b73ffffffffffffffffffffffffffffffffffffffff1661042e6103b9565b73ffffffffffffffffffffffffffffffffffffffff1614610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047b90610687565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104eb90610667565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000813590506105c881610762565b92915050565b6000602082840312156105e057600080fd5b60006105ee848285016105b9565b91505092915050565b610600816106b8565b82525050565b60006106136026836106a7565b915061061e826106ea565b604082019050919050565b60006106366020836106a7565b915061064182610739565b602082019050919050565b600060208201905061066160008301846105f7565b92915050565b6000602082019050818103600083015261068081610606565b9050919050565b600060208201905081810360008301526106a081610629565b9050919050565b600082825260208201905092915050565b60006106c3826106ca565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61076b816106b8565b811461077657600080fd5b5056fea264697066735822122061d10e0dcb405f9bc890e18d7f06f45e71acb922c6e8179a98e5048db1a72c7864736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3319:43",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:43"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:43"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:43"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:43",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:43",
                "type": ""
              }
            ],
            "src": "7:139:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:43"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:43"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:43"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:43",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:43",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:43",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:43",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:43",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:43"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:43"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:43"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:43"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:43"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:43"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:43",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:43",
                "type": ""
              }
            ],
            "src": "152:262:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "485:53:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "502:3:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "525:5:43"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "507:17:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:24:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:37:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:37:43"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:43",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "480:3:43",
                "type": ""
              }
            ],
            "src": "420:118:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "690:220:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "700:74:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "766:3:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "771:2:43",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "707:58:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "707:67:43"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "700:3:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "872:3:43"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "783:88:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "783:93:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "783:93:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "885:19:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "896:3:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "901:2:43",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "892:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "892:12:43"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "885:3:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "678:3:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "686:3:43",
                "type": ""
              }
            ],
            "src": "544:366:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1062:220:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1072:74:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1138:3:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1143:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1079:58:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1079:67:43"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1072:3:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1244:3:43"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "1155:88:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1155:93:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1155:93:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1257:19:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1268:3:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1273:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1264:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1264:12:43"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1257:3:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1050:3:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1058:3:43",
                "type": ""
              }
            ],
            "src": "916:366:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1386:124:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1396:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1408:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1419:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1404:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1404:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1396:4:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1476:6:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1489:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1500:1:43",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1485:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1485:17:43"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1432:43:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1432:71:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1432:71:43"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1358:9:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1370:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1381:4:43",
                "type": ""
              }
            ],
            "src": "1288:222:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1687:248:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1697:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1709:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1720:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1705:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1705:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1697:4:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1744:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1755:1:43",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1740:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1740:17:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1763:4:43"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1769:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1759:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1759:20:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1733:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1733:47:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1733:47:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1789:139:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1923:4:43"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1797:124:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1797:131:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1789:4:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1667:9:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1682:4:43",
                "type": ""
              }
            ],
            "src": "1516:419:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2112:248:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2122:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2134:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2145:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2130:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2130:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2122:4:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2169:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2180:1:43",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2165:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2165:17:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2188:4:43"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2194:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2184:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2184:20:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2158:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2158:47:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2158:47:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2214:139:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2348:4:43"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2222:124:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2222:131:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2214:4:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2092:9:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2107:4:43",
                "type": ""
              }
            ],
            "src": "1941:419:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2462:73:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2479:3:43"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2484:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2472:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2472:19:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2472:19:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2500:29:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2519:3:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2524:4:43",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2515:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2515:14:43"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2500:11:43"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2434:3:43",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2439:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2450:11:43",
                "type": ""
              }
            ],
            "src": "2366:169:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2586:51:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2596:35:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2625:5:43"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2607:17:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2607:24:43"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2596:7:43"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2568:5:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2578:7:43",
                "type": ""
              }
            ],
            "src": "2541:96:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2688:81:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2698:65:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2713:5:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2720:42:43",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2709:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2709:54:43"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2698:7:43"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2670:5:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2680:7:43",
                "type": ""
              }
            ],
            "src": "2643:126:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2881:119:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2903:6:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2911:1:43",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2899:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2899:14:43"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2915:34:43",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2892:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2892:58:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2892:58:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2971:6:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2979:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2967:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2967:15:43"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2984:8:43",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2960:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2960:33:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2960:33:43"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2873:6:43",
                "type": ""
              }
            ],
            "src": "2775:225:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3112:76:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3134:6:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3142:1:43",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3130:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3130:14:43"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3146:34:43",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3123:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3123:58:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3123:58:43"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3104:6:43",
                "type": ""
              }
            ],
            "src": "3006:182:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3237:79:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3294:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3303:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3306:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3296:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3296:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3296:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3260:5:43"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3285:5:43"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3267:17:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3267:24:43"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3257:2:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3257:35:43"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3250:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3250:43:43"
                  },
                  "nodeType": "YulIf",
                  "src": "3247:2:43"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3230:5:43",
                "type": ""
              }
            ],
            "src": "3194:122:43"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 43,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "712:496:41:-:0;;;794:42;770:66;;;;;;;;;;;;;;;;;;;;712:496;;;;;;;;;;867:17:18;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;712:496:41;;586:96:24;639:7;665:10;658:17;;586:96;:::o;712:496:41:-;;;;;;;",
  "deployedSourceMap": "712:496:41:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1169:30;1182:6;;;;;;;;;;;1190:8;;1169:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:30::i;:::-;712:496;1700:145:18;;;;;;;;;;;;;:::i;:::-;;1039:86:41;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1068:85:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;770:66:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1994:240:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;342:361:39;459:4;447:17;470:1;465:23;;;;440:48;;465:23;484:1;481;474:12;440:48;;508:4;616:3;613:1;601:9;595:16;588:4;577:9;573:20;567:4;559:5;552;548:17;535:85;636:6;648:1;643:20;;;;629:34;;643:20;652:9;629:34;;683:3;680:1;672:15;1700:145:18;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;1039:86:41:-;1291:12:18;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1111:7:41::1;1102:6;;:16;;;;;;;;;;;;;;;;;;1039:86:::0;:::o;1068:85:18:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;770:66:41:-;;;;;;;;;;;;;:::o;1994:240:18:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;586:96:24:-;639:7;665:10;658:17;;586:96;:::o;7:139:43:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;211:6;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:366::-;686:3;707:67;771:2;766:3;707:67;:::i;:::-;700:74;;783:93;872:3;783:93;:::i;:::-;901:2;896:3;892:12;885:19;;690:220;;;:::o;916:366::-;1058:3;1079:67;1143:2;1138:3;1079:67;:::i;:::-;1072:74;;1155:93;1244:3;1155:93;:::i;:::-;1273:2;1268:3;1264:12;1257:19;;1062:220;;;:::o;1288:222::-;1381:4;1419:2;1408:9;1404:18;1396:26;;1432:71;1500:1;1489:9;1485:17;1476:6;1432:71;:::i;:::-;1386:124;;;;:::o;1516:419::-;1682:4;1720:2;1709:9;1705:18;1697:26;;1769:9;1763:4;1759:20;1755:1;1744:9;1740:17;1733:47;1797:131;1923:4;1797:131;:::i;:::-;1789:139;;1687:248;;;:::o;1941:419::-;2107:4;2145:2;2134:9;2130:18;2122:26;;2194:9;2188:4;2184:20;2180:1;2169:9;2165:17;2158:47;2222:131;2348:4;2222:131;:::i;:::-;2214:139;;2112:248;;;:::o;2366:169::-;2450:11;2484:6;2479:3;2472:19;2524:4;2519:3;2515:14;2500:29;;2462:73;;;;:::o;2541:96::-;2578:7;2607:24;2625:5;2607:24;:::i;:::-;2596:35;;2586:51;;;:::o;2643:126::-;2680:7;2720:42;2713:5;2709:54;2698:65;;2688:81;;;:::o;2775:225::-;2915:34;2911:1;2903:6;2899:14;2892:58;2984:8;2979:2;2971:6;2967:15;2960:33;2881:119;:::o;3006:182::-;3146:34;3142:1;3134:6;3130:14;3123:58;3112:76;:::o;3194:122::-;3267:24;3285:5;3267:24;:::i;:::-;3260:5;3257:35;3247:2;;3306:1;3303;3296:12;3247:2;3237:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"./DelegateProxy.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title Forwarder proxy contract with editable target\n *\n * @dev For OfferingRegistry contract we use mutable forwarder instead of using the contract directly.\n * This is for better upgradeability. Since OfferingRegistry fires all events related to offerings,\n * we want to be able to access whole history of events always on the same address. Which would be the\n * address of a MutableForwarder. When OfferingRegistry contract is replaced with an updated one,\n * mutable forwarder just replaces target and all events stay still accessible on the same address.\n */\ncontract MutableForwarder is DelegateProxy, Ownable {\n    address public target = 0xBEeFbeefbEefbeEFbeEfbEEfBEeFbeEfBeEfBeef; // checksummed to silence warning\n\n    /**\n     * @dev Replaces target forwarder contract is pointing to\n     * Only owner can replace target\n\n     * @param _target New target to proxy into\n    */\n    function setTarget(address _target) public onlyOwner {\n        target = _target;\n    }\n\n    fallback() external payable {\n        delegatedFwd(target, msg.data);\n    }\n}\n",
  "sourcePath": "/Users/kwladyka/district0x/name-bazaar/resources/public/contracts/src/proxy/MutableForwarder.sol",
  "ast": {
    "absolutePath": "project:/resources/public/contracts/src/proxy/MutableForwarder.sol",
    "exportedSymbols": {
      "Context": [
        6843
      ],
      "DelegateProxy": [
        9321
      ],
      "MutableForwarder": [
        9376
      ],
      "Ownable": [
        5545
      ]
    },
    "id": 9377,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9342,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:41"
      },
      {
        "absolutePath": "project:/resources/public/contracts/src/proxy/DelegateProxy.sol",
        "file": "./DelegateProxy.sol",
        "id": 9343,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9377,
        "sourceUnit": 9322,
        "src": "57:29:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9344,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9377,
        "sourceUnit": 5546,
        "src": "87:52:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9346,
              "name": "DelegateProxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9321,
              "src": "741:13:41"
            },
            "id": 9347,
            "nodeType": "InheritanceSpecifier",
            "src": "741:13:41"
          },
          {
            "baseName": {
              "id": 9348,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5545,
              "src": "756:7:41"
            },
            "id": 9349,
            "nodeType": "InheritanceSpecifier",
            "src": "756:7:41"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9345,
          "nodeType": "StructuredDocumentation",
          "src": "141:570:41",
          "text": " @title Forwarder proxy contract with editable target\n @dev For OfferingRegistry contract we use mutable forwarder instead of using the contract directly.\n This is for better upgradeability. Since OfferingRegistry fires all events related to offerings,\n we want to be able to access whole history of events always on the same address. Which would be the\n address of a MutableForwarder. When OfferingRegistry contract is replaced with an updated one,\n mutable forwarder just replaces target and all events stay still accessible on the same address."
        },
        "fullyImplemented": true,
        "id": 9376,
        "linearizedBaseContracts": [
          9376,
          5545,
          6843,
          9321
        ],
        "name": "MutableForwarder",
        "nameLocation": "721:16:41",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d4b83992",
            "id": 9352,
            "mutability": "mutable",
            "name": "target",
            "nameLocation": "785:6:41",
            "nodeType": "VariableDeclaration",
            "scope": 9376,
            "src": "770:66:41",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9350,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "770:7:41",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307842456546626565666245656662654546626545666245456642456546626545664265456642656566",
              "id": 9351,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "794:42:41",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xBEeFbeefbEefbeEFbeEfbEEfBEeFbeEfBeEfBeef"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9364,
              "nodeType": "Block",
              "src": "1092:33:41",
              "statements": [
                {
                  "expression": {
                    "id": 9362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9360,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9352,
                      "src": "1102:6:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9361,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9355,
                      "src": "1111:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1102:16:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9363,
                  "nodeType": "ExpressionStatement",
                  "src": "1102:16:41"
                }
              ]
            },
            "documentation": {
              "id": 9353,
              "nodeType": "StructuredDocumentation",
              "src": "877:157:41",
              "text": " @dev Replaces target forwarder contract is pointing to\n Only owner can replace target\n @param _target New target to proxy into"
            },
            "functionSelector": "776d1a01",
            "id": 9365,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9358,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9357,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5494,
                  "src": "1082:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "1082:9:41"
              }
            ],
            "name": "setTarget",
            "nameLocation": "1048:9:41",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9355,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1066:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 9365,
                  "src": "1058:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1058:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1057:17:41"
            },
            "returnParameters": {
              "id": 9359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1092:0:41"
            },
            "scope": 9376,
            "src": "1039:86:41",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9374,
              "nodeType": "Block",
              "src": "1159:47:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9369,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9352,
                        "src": "1182:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9370,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1190:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "1190:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 9368,
                      "name": "delegatedFwd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9320,
                      "src": "1169:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 9372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1169:30:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9373,
                  "nodeType": "ExpressionStatement",
                  "src": "1169:30:41"
                }
              ]
            },
            "id": 9375,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:2:41"
            },
            "returnParameters": {
              "id": 9367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1159:0:41"
            },
            "scope": 9376,
            "src": "1131:75:41",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9377,
        "src": "712:496:41",
        "usedErrors": []
      }
    ],
    "src": "32:1177:41"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "1652717064141": {
      "events": {},
      "links": {},
      "address": "0xD10a7051f12b60fd7728bc8E867883E01e6Db3Cb",
      "transactionHash": "0x7f6c3fc33629f6edd41f9b2072bb3ca853708e275306bc69f0099baa55719ff2"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-19T11:58:22.386Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "For OfferingRegistry contract we use mutable forwarder instead of using the contract directly. This is for better upgradeability. Since OfferingRegistry fires all events related to offerings, we want to be able to access whole history of events always on the same address. Which would be the address of a MutableForwarder. When OfferingRegistry contract is replaced with an updated one, mutable forwarder just replaces target and all events stay still accessible on the same address.",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setTarget(address)": {
        "details": "Replaces target forwarder contract is pointing to Only owner can replace target",
        "params": {
          "_target": "New target to proxy into"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Forwarder proxy contract with editable target",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}